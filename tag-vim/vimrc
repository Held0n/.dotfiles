"
" ██╗   ██╗██╗███╗   ███╗██████╗  ██████╗
" ██║   ██║██║████╗ ████║██╔══██╗██╔════╝
" ██║   ██║██║██╔████╔██║██████╔╝██║     
" ╚██╗ ██╔╝██║██║╚██╔╝██║██╔══██╗██║     
"  ╚████╔╝ ██║██║ ╚═╝ ██║██║  ██║╚██████╗
"   ╚═══╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝ ╚═════╝
"                                        

" ====
" ==== Vim 系统配置
" ====

filetype on                                       " 开启文件类型检测
filetype plugin indent on                         " 开启特定的文件类型的插件和缩进
set fileencodings=utf-8,gb2312,gb18030,gbk        " 设置文件编码

set nocompatible                                  " 设置关闭有关vi一致性 
set clipboard=unnamed,unnamedplus                 " 设置系统粘贴板
set mouse=a                                       " 开启所有模式下的鼠标支持
set mousehide                                     " 输入文字时隐藏鼠标

" ====
" ==== Vim UI 配置
" ====

packadd dracula                                   " 添加 dracula-theme
syntax enable                                     " 使用语法高亮
syntax on                                         " 语法高亮
colorscheme dracula                               " 设置dracula主题
set t_Co=256                                      " 设置为256配色
set number                                        " 设置显示行号
set ruler                                         " 设置显示光标所在位置
set cmdheight=2                                   " 设置命令号高度为2
set laststatus=2                                  " 设置状态栏
set cursorline                                    " 设置显示光标所在行下划线
set guifont=DroidSansMono_Nerd_Font:h11           " 设置字体和大小
" set relativenumber                              " 设置相对行号

" ====
" ==== Vim 编辑设置
" ==== 

" Tab 配置
set expandtab                                     " 设置将 Tab 转换为 Space
set shiftwidth=4                                  " 设置 Tab 等于4个 Space
set tabstop=4                                     " 被建议如此设置
set softtabstop=4                                 " 被建议如此设置

" 缩进设置
set autoindent                                    " 新增的一行和前一行使用相同的缩进形式
set smartindent                                   " 同时可以识别{}，当遇到}时，取消缩进

" Backspace 配置
set backspace=indent,eol,start                    " 设置 backspace 的工作方式

" 搜索设置
set hlsearch                                      " 设置搜索高亮
set incsearch                                     " 设置边高亮边搜索
set ignorecase                                    " 设置搜索忽略大小写...
set smartcase                                     " ...除非含有大写字母

" 滚屏设置
set ttyfast                                       " 使屏幕滚动更快
set lazyredraw                                    " 同上

" 其他设置
set nrformats=bin                                 " 设置数字都为10进制
set nowrap                                        " 设置文字不显示换行
set showmatch                                     " 设置显示匹配的括号
set title                                         " 设置显示文件标题
set matchtime=2                                   " 设置显示匹配括号的时间位0.2秒
set wildmenu                                      " 设置命令模式 tab 键显示菜单
set shortmess+=c

" ====
" ==== Key-Mapping
" ====

let mapleader=" "                                 " 更改 Leader 键为 Space

" H 跳到行首
noremap H ^
" L 跳到行尾
noremap L $
" J 向下跳5行
noremap J 5j
" K 向上跳5行 
noremap K 5k

" <Space>-q => 退出当前窗口
noremap <silent><LEADER>q <esc>:q<CR>
" <Sapce>-Q => 退出所有窗口
noremap <silent><LEADER>Q <esc>:qa<CR>
" <Space>-w => 保存
noremap <LEADER>w :w<CR>
" <Space>-/ => 取消高亮
noremap <silent><LEADER>/ :nohlsearch<CR>

" 输入模式下jj => <ESC> 
inoremap jj <esc>

" 使搜索位于屏幕中心
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz

" Window 管理
noremap <LEADER>w <C-w>w
noremap <LEADER>k <C-w>k
noremap <LEADER>j <C-w>j
noremap <LEADER>h <C-w>h
noremap <LEADER>l <C-w>l

" ====================================
" ====    Vim-plug 插件管理配置   ====
" ====================================

call plug#begin('~/.vim/plugged')
" 确保使用单引号

" 自动保存插件
Plug '907th/vim-auto-save'

" 使 vim 拥有256配色
Plug 'godlygeek/csapprox'

" coc.nvim 自动补全插件
Plug 'neoclide/coc.nvim', {'branch': 'release'}

" 彩虹括号匹配
Plug 'luochen1990/rainbow'

" 自动输入括号
Plug 'jiangmiao/auto-pairs'

" c++ 高亮插件
Plug 'octol/vim-cpp-enhanced-highlight'

" indeltline 缩进线插件
Plug 'yggdroot/indentline'

" markdown-preview md文件渲染
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for' :['markdown', 'vim-plug'] }

" eleline status line
Plug 'Held0n/eleline.vim'

" vim-markdown-toc TOC生成插件
Plug 'mzlogin/vim-markdown-toc'

" sneak 快速跳转插件
Plug 'justinmk/vim-sneak'

" 初始化插件系统 
call plug#end()

" ==============================================
" ====    vim-auto-save 自动保存插件配置    ====
" ==============================================

"开启 AutoSave 随 Vim 启动
let g:auto_save = 1 

" =============================
" ====    dracula 主题配置 ====
" =============================

" 取消斜体
let g:dracula_italic = 0

" =================================
" ====    coc.nvim 插件配置    ====
" =================================

" ====    coc.nvim 补全    ====
 
" 始终显示标志列，否则每次都会移动文本diagnostics appear/become resolved.
set signcolumn=yes                                

" 使用 Tab 键触发有字符的补全并导航
" 注意: 使用命令':verbose imap <tab>'确保 Tab 未使用，然后再将其放入配置中。
inoremap <silent><expr> <TAB>
    \ pumvisible() ? "\<C-n>" :
    \ <SID>check_back_space() ? "\<TAB>" :
    \ coc#refresh()
inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>" 

function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~# '\s'
endfunction

" 使用回车确认补全
if has('patch8.1.1068')
  " Use `complete_info` if your (Neo)Vim version supports it.
  inoremap <expr> <cr> complete_info()["selected"] != "-1" ? "\<C-y>" : "\<C-g>u\<CR>"
else
  imap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
endif

"====    coc-explorer 文件导航    ====

" <space>e 打开文件导航栏
nmap <silent><space>e :CocCommand explorer<CR>

" ================================
" ====    rainbow 彩虹括号    ====
" ================================

" 开启彩虹括号
let g:rainbow_active = 1

" ======================================================
" ====   vim-cpp-enhanced-highlight c++ 高亮插件    ==== 
" ======================================================

" 高亮 class scope
let g:cpp_class_scope_highlight = 1

" 高亮 member variable
let g:cpp_member_variable_highlight = 1

" 高亮 class names in declaration
let g:cpp_class_decl_highlight = 1

" =========================================
" ====    缩进线 indentline插件配置    ====
" =========================================

" 设置缩进线的颜色 (7: silver)
let g:indentLine_color_term = 7

" 设置缩进线的样式
let g:indentLine_char = '┆'

" 设置显示缩进线的文件类型
let g:indentLine_fileType = ['c', 'cpp', 'json', 'rust']
